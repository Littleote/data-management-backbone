# -*- coding: utf-8 -*-
"""
@authors: david candela & andreu gim√©nez
"""

import os
import json
import duckdb

trusted_path = 'trusted/'
explotation_path = 'exploitation/'

def load_queries():
    if not os.path.exists(explotation_path + "tables.json"):
        print("No exploitation tables defined")
        return {}
    with open(explotation_path + "tables.json", mode='r', encoding='utf-8') as handler:
        queries = json.load(handler)
        return queries


def merge_tables(queries):
    with duckdb.connect(database=trusted_path + 'database.db', read_only=False) as con:
        # Attach tables and extract information
        con.execute(f"ATTACH DATABASE '{explotation_path + 'database.db'}' AS destination")
        for table, query in queries.items():
            con.execute(f"CREATE OR REPLACE TABLE destination.{table} AS {query}")


def to_exploitation():
    queries = load_queries()
    merge_tables(queries)
